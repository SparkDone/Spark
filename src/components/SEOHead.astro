---
// SEO 头部组件 - 统一管理所有 SEO 相关的 meta 标签
export interface Props {
  title?: string;
  description?: string;
  image?: string;
  article?: boolean;
  publishedTime?: string;
  modifiedTime?: string;
  author?: string;
  tags?: string[];
  category?: string;
}

const {
  title,
  description,
  image,
  article = false,
  publishedTime,
  modifiedTime,
  author,
  tags = [],
  category
} = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const socialImageURL = image ? new URL(image, Astro.site) : null;

// 生成结构化数据
const jsonLd = article ? {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  headline: title,
  description: description,
  image: socialImageURL?.href,
  url: canonicalURL.href,
  datePublished: publishedTime,
  dateModified: modifiedTime || publishedTime,
  author: {
    "@type": "Person",
    name: author || "Admin"
  },
  publisher: {
    "@type": "Organization",
    name: "SparkDone",
    url: Astro.site?.href
  },
  mainEntityOfPage: {
    "@type": "WebPage",
    "@id": canonicalURL.href
  },
  keywords: tags.join(", "),
  articleSection: category
} : {
  "@context": "https://schema.org",
  "@type": "WebPage",
  name: title,
  description: description,
  url: canonicalURL.href,
  image: socialImageURL?.href
};
---

<!-- 基础 SEO -->
{title && <title>{title}</title>}
{description && <meta name="description" content={description}>}
<meta name="robots" content="index, follow">
<link rel="canonical" href={canonicalURL}>

<!-- Open Graph -->
{title && <meta property="og:title" content={title}>}
{description && <meta property="og:description" content={description}>}
<meta property="og:type" content={article ? "article" : "website"}>
<meta property="og:url" content={canonicalURL}>
{socialImageURL && <meta property="og:image" content={socialImageURL.href}>}
<meta property="og:site_name" content="SparkDone">

<!-- Twitter Card -->
<meta name="twitter:card" content="summary_large_image">
{title && <meta name="twitter:title" content={title}>}
{description && <meta name="twitter:description" content={description}>}
{socialImageURL && <meta name="twitter:image" content={socialImageURL.href}>}

<!-- 文章特定的 meta 标签 -->
{article && publishedTime && <meta property="article:published_time" content={publishedTime}>}
{article && modifiedTime && <meta property="article:modified_time" content={modifiedTime}>}
{article && author && <meta property="article:author" content={author}>}
{article && category && <meta property="article:section" content={category}>}
{article && tags.map(tag => <meta property="article:tag" content={tag}>)}

<!-- 结构化数据 -->
<script type="application/ld+json" set:html={JSON.stringify(jsonLd)}></script>

<!-- 预加载关键资源 -->
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>

<!-- DNS 预解析 -->
<link rel="dns-prefetch" href="//fonts.googleapis.com">
<link rel="dns-prefetch" href="//fonts.gstatic.com">
